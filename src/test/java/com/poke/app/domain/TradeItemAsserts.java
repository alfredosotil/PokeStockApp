package com.poke.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TradeItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeItemAllPropertiesEquals(TradeItem expected, TradeItem actual) {
        assertTradeItemAutoGeneratedPropertiesEquals(expected, actual);
        assertTradeItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeItemAllUpdatablePropertiesEquals(TradeItem expected, TradeItem actual) {
        assertTradeItemUpdatableFieldsEquals(expected, actual);
        assertTradeItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeItemAutoGeneratedPropertiesEquals(TradeItem expected, TradeItem actual) {
        assertThat(actual)
            .as("Verify TradeItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeItemUpdatableFieldsEquals(TradeItem expected, TradeItem actual) {
        assertThat(actual)
            .as("Verify TradeItem relevant properties")
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()))
            .satisfies(a -> assertThat(a.getSide()).as("check side").isEqualTo(expected.getSide()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeItemUpdatableRelationshipsEquals(TradeItem expected, TradeItem actual) {
        assertThat(actual)
            .as("Verify TradeItem relationships")
            .satisfies(a -> assertThat(a.getTrade()).as("check trade").isEqualTo(expected.getTrade()))
            .satisfies(a -> assertThat(a.getCard()).as("check card").isEqualTo(expected.getCard()));
    }
}
