package com.poke.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TradeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeAllPropertiesEquals(Trade expected, Trade actual) {
        assertTradeAutoGeneratedPropertiesEquals(expected, actual);
        assertTradeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeAllUpdatablePropertiesEquals(Trade expected, Trade actual) {
        assertTradeUpdatableFieldsEquals(expected, actual);
        assertTradeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeAutoGeneratedPropertiesEquals(Trade expected, Trade actual) {
        assertThat(actual)
            .as("Verify Trade auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeUpdatableFieldsEquals(Trade expected, Trade actual) {
        assertThat(actual)
            .as("Verify Trade relevant properties")
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getMessage()).as("check message").isEqualTo(expected.getMessage()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTradeUpdatableRelationshipsEquals(Trade expected, Trade actual) {
        assertThat(actual)
            .as("Verify Trade relationships")
            .satisfies(a -> assertThat(a.getProposer()).as("check proposer").isEqualTo(expected.getProposer()));
    }
}
