package com.poke.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAllPropertiesEquals(Card expected, Card actual) {
        assertCardAutoGeneratedPropertiesEquals(expected, actual);
        assertCardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAllUpdatablePropertiesEquals(Card expected, Card actual) {
        assertCardUpdatableFieldsEquals(expected, actual);
        assertCardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAutoGeneratedPropertiesEquals(Card expected, Card actual) {
        assertThat(actual)
            .as("Verify Card auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardUpdatableFieldsEquals(Card expected, Card actual) {
        assertThat(actual)
            .as("Verify Card relevant properties")
            .satisfies(a -> assertThat(a.getTcgId()).as("check tcgId").isEqualTo(expected.getTcgId()))
            .satisfies(a -> assertThat(a.getSetCode()).as("check setCode").isEqualTo(expected.getSetCode()))
            .satisfies(a -> assertThat(a.getNumber()).as("check number").isEqualTo(expected.getNumber()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getRarity()).as("check rarity").isEqualTo(expected.getRarity()))
            .satisfies(a -> assertThat(a.getSuperType()).as("check superType").isEqualTo(expected.getSuperType()))
            .satisfies(a -> assertThat(a.getTypes()).as("check types").isEqualTo(expected.getTypes()))
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getLegalities()).as("check legalities").isEqualTo(expected.getLegalities()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardUpdatableRelationshipsEquals(Card expected, Card actual) {
        assertThat(actual)
            .as("Verify Card relationships")
            .satisfies(a -> assertThat(a.getSet()).as("check set").isEqualTo(expected.getSet()));
    }
}
